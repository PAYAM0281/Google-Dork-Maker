name: Chrome Extension CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'tsconfig.json'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  NODE_VERSION: 18.x
  CACHE_NAME: node-modules-${{ hashFiles('package-lock.json') }}

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Dependencies
        run: |
          npm ci --prefer-offline --audit=false
          npm cache clean --force

      - name: Lint Code
        run: npm run lint

      - name: Run Tests
        run: npm test -- --watchAll=false --coverage

      - name: Build Production
        run: |
          npm run build
          ls -la build/

      - name: Validate Manifest
        run: |
          node -e "const manifest = require('./public/manifest.json'); 
          if (!manifest.manifest_version || manifest.manifest_version < 3) 
            throw new Error('Invalid Manifest version');"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-build
          path: |
            build/
            package.json
          retention-days: 5

  security-check:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: build-test
    timeout-minutes: 10
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: NPM Audit
        run: npm audit --production --audit-level=moderate

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
